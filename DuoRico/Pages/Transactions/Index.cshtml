@page "{type:alpha}"
@using DuoRico.Models

@model DuoRico.Pages_Transactions.IndexModel

@{
    ViewData["Title"] = (Model.Type == TransactionType.Income ? "Receitas" : "Despesas");
}

<div class="container py-2">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3">
        <h2 class="text-center text-md-start fw-bold text-secondary">
            @if (Model.Type == TransactionType.Income)
            {
                <i class="bi bi-arrow-up-circle text-success"></i>
                <span>Receitas de @Model.SelectedMonthName</span>
            }
            else
            {
                <i class="bi bi-arrow-down-circle text-danger"></i>
                <span>Despesas de @Model.SelectedMonthName</span>
            }
        </h2>

        <form method="get" class="d-flex flex-column flex-md-row align-items-md-center gap-2">
            <select asp-for="SelectMonth" asp-items="Model.MonthOptions" class="form-select w-auto"></select>
            <select asp-for="SelectYear" asp-items="Model.YearOptions" class="form-select w-auto"></select>
            <button type="submit" class="btn btn-outline-secondary w-100 w-md-auto mt-2 mt-md-0">Filtrar</button>
        </form>
    </div>

    <div class="d-grid d-md-block my-3 ">
        <a asp-page="Create" asp-route-type="@Model.Type" class="btn @(Model.Type == TransactionType.Income ? "btn-success" : "btn-danger")">
            <i class="bi bi-plus-circle me-1"></i> @(Model.Type == TransactionType.Income ? "Nova Receita" : "Nova Despesa")
        </a>
    </div>

    @* Área de pesquisa *@
    <div class="row justify-content-center mb-3">
        <div class="col-md-8 col-lg-6">
            <div class="input-group">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
                <input type="search" id="searchInput" class="form-control" placeholder="Pesquisar por descrição ou categoria..." />
            </div>
        </div>
    </div>

    @* Modo Mobile *@
    <div class="d-md-none" id="mobile-list-container">
        @if (!Model.TransactionList.Any())
        {
            <div class="text-center p-4 border rounded text-muted">Nenhuma transação encontrada.</div>
        }
        else
        {
            <div class="no-results-message d-none text-center text-muted p-4 border rounded">
                <i class="bi bi-exclamation-circle fs-4 d-block mb-2"></i>
                Nenhuma transação encontrada com o termo pesquisado.
            </div>

            <ul class="list-group">
                @foreach (var item in Model.TransactionList)
                {
                    <li class="list-group-item transaction-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <h6 class="fw-bold text-truncate">
                                @item.Description
                                @if (item.TotalInstallments > 1)
                                {
                                    <span class="fw-normal text-muted">(@item.InstallmentNumber/@item.TotalInstallments)</span>
                                }
                            </h6>

                            <h6 class="fw-bold @(item.Type == TransactionType.Income ? "text-success" : "text-danger")">
                                @item.Amount.ToString("C", new System.Globalization.CultureInfo("pt-BR"))
                            </h6>
                        </div>

                        <div class="my-1">
                            <span class="badge @(item.IsPaid ? "bg-success" : "bg-secondary")">
                                @(item.IsPaid ? "Pago" : "Não pago")
                            </span>
                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted d-block">@item.Category - @item.CreatedAt.ToString("dd/MM/yyyy")</small>

                            <div class="dropdown">
                                <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-three-dots-vertical"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" asp-page="./Edit" asp-route-id="@item.Id" asp-route-type="@Model.Type">Editar</a></li>
                                    <li>
                                        <button type="button" class="dropdown-item text-danger delete-btn"
                                                data-bs-toggle="modal"
                                                data-bs-target="#confirmDeleteModal"
                                                data-id="@item.Id">
                                            Excluir
                                        </button>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        }
    </div>

    @* Modo Desktop *@
    <table class="table table-hover align-middle d-none d-md-table" id="desktop-table-container">
        <thead>
            <tr>
                <th>Descrição</th>
                <th>Categoria</th>
                <th>Status</th>
                <th class="text-end">Valor</th>
                <th class="text-center">Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.TransactionList.Any())
            {
                <tr>
                    <td colspan="5" class="text-center text-muted p-4">Nenhuma transação encontrada.</td>
                </tr>
            }
            else
            {
                @foreach (var item in Model.TransactionList)
                {
                    <tr class="transaction-item">
                        <td>
                            <div class="fw-bold">@item.Description</div>
                            <small class="text-muted">
                                @item.CreatedAt.ToString("dd/MM/yyyy")
                                @if (item.TotalInstallments > 1)
                                {
                                    <span class="ms-2">(@item.InstallmentNumber/@item.TotalInstallments)</span>
                                }
                            </small>
                        </td>
                        <td>@item.Category</td>
                        <td>
                            <span class="badge @(item.IsPaid ? "bg-success" : "bg-secondary")">
                                @(item.IsPaid ? "Pago" : "Não pago")
                            </span>
                        </td>
                        <td class="text-end fw-bold @(item.Type == TransactionType.Income ? "text-success" : "text-danger")">
                            @item.Amount.ToString("C", new System.Globalization.CultureInfo("pt-BR"))
                        </td>
                        <td class="text-center">
                            <div class="dropdown">
                                <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-three-dots-vertical"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" asp-page="./Edit" asp-route-id="@item.Id" asp-route-type="@Model.Type">Editar</a></li>
                                    <li>
                                        <button type="button" class="dropdown-item text-danger delete-btn"
                                                data-bs-toggle="modal"
                                                data-bs-target="#confirmDeleteModal"
                                                data-id="@item.Id">
                                            Excluir
                                        </button>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            }

            <tr class="no-results-message d-none">
                <td colspan="5" class="text-center text-muted p-4">
                    Nenhuma transação encontrada com o termo pesquisado.
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar Exclusão</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Tem certeza de que deseja excluir esta transação? Esta ação não pode ser desfeita.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>

                <form id="deleteForm" method="post">
                    <button type="submit" class="btn btn-danger">Sim, Excluir</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @* Modal de exclusão de uma transação *@
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            const deleteForm = document.getElementById('deleteForm');

            const deleteButtons = document.querySelectorAll('.delete-btn');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function () {

                    const transactionId = this.dataset.id;

                    const transactionType = '@Model.Type.ToString().ToLower()';

                    const actionUrl = `/Transactions/Delete/${transactionId}/${transactionType}`;

                    deleteForm.setAttribute('action', actionUrl);
                });
            });
        });
    </script>

    @* Área de pesquisa de uma transação *@
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const mobileContainer = document.getElementById('mobile-list-container');
            const desktopContainer = document.getElementById('desktop-table-container');

            searchInput.addEventListener('input', function () {
                const searchTerm = this.value.toLowerCase().trim();

                // Função que filtra uma lista (seja mobile ou desktop)
                const filterList = (container) => {
                    const items = container.querySelectorAll('.transaction-item');
                    const noResultsMessage = container.querySelector('.no-results-message');
                    const tableHead = container.querySelector('thead'); // Apenas para a tabela

                    let visibleItemsCount = 0;

                    items.forEach(item => {
                        const itemText = item.textContent.toLowerCase();
                        const isVisible = itemText.includes(searchTerm);
                        item.style.display = isVisible ? '' : 'none';
                        if (isVisible) visibleItemsCount++;
                    });

                    const showNoResults = visibleItemsCount === 0 && searchTerm !== '';

                    // Mostra/esconde a mensagem de "nenhum resultado"
                    if (noResultsMessage) {
                        noResultsMessage.classList.toggle('d-none', !showNoResults);
                    }

                    // Mostra/esconde o cabeçalho da tabela no desktop
                    if (tableHead) {
                        tableHead.style.display = showNoResults ? 'none' : '';
                    }
                };

                // Executa a função de filtro para ambos os layouts
                filterList(mobileContainer);
                filterList(desktopContainer);
            });
        });
    </script>
}